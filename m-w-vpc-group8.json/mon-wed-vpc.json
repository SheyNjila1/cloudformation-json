{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a VPC and 2 subnets",
    "Metadata": {

    },
    "Parameters": {
      "EnvironmentName": {
          "Description": "Select an environment",
          "Type": "String",
          "AllowedValues": [
          "Dev",
          "Stg"
        ],
        "ConstraintDescription": "Environment must match with specified AllowedValue"

      },
      "Vpconecidr": {
          "Description": "Create cidrblock for mon to fri vpc",
          "Type": "String",
          "Default": "10.0.0.0/16"
      },
      "pubsubcidr": {
          "Description": "This cidr is for public subnet",
          "Type": "String",
          "Default": "10.0.1.0/24"
      },
      "prtsubcidr": {
          "Description": "This cidr is for private subnet",
          "Type": "String",
          "Default": "10.0.2.0/24"
      },
      "Keypair": {
          "Description": "a keypair for EC2",
          "Type": "String",
          "Default": "AnsibleMain"
      },
      "ImageID": {
          "Description": "This is our AMI in NOVA",
          "Type": "String",
          "Default": "ami-0022f774911c1d690"
      },
      "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t1.micro",
      "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "SSHLocation": {
      "Description": "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
    },
    "Mappings": {
      "AWSInstanceType2Arch" : {
    "t1.micro"    : { "Arch" : "HVM64"  },
    "t2.nano"     : { "Arch" : "HVM64"  },
    "t2.micro"    : { "Arch" : "HVM64"  },
    "t2.small"    : { "Arch" : "HVM64"  },
    "t2.medium"   : { "Arch" : "HVM64"  }
},
      "AWSRegionArch2AMI" : {
    "us-east-1"        : {"HVM64" : "ami-032930428bf1abbff", "HVMG2" : "ami-0aeb704d503081ea6"},
    "us-east-2"        : {"HVM64" : "ami-027cab9a7bf0155df", "HVMG2" : "NOT_SUPPORTED"},
    "us-west-1"        : {"HVM64" : "ami-088c153f74339f34c", "HVMG2" : "ami-0a7fc72dc0e51aa77"},
    "us-west-2"        : {"HVM64" : "ami-01fee56b22f308154", "HVMG2" : "ami-0fe84a5b4563d8f27"}
  }
    },
    "Conditions": {

    },
    "Resources": {
"mwvpc": {
  "Type": "AWS::EC2::VPC",
  "Properties": {
    "CidrBlock": { "Ref": "Vpconecidr" },
    "Tags": [{ "Key": "Name", "Value":  "m-w-vpc1" }]
  }
},
"mwpubsubnet": {
  "Type": "AWS::EC2::Subnet",
  "Properties": {
    "AvailabilityZone": "us-east-1a",
    "VpcId": { "Ref": "mwvpc" },
    "CidrBlock": { "Ref": "pubsubcidr" },
    "Tags": [{ "Key": "Name", "Value":  "m-w-subnet1" }]
  }
  },
"mwprvtsubnet": {
  "Type": "AWS::EC2::Subnet",
  "Properties": {
    "AvailabilityZone": "us-east-1b",
    "VpcId": { "Ref": "mwvpc" },
    "CidrBlock": { "Ref": "prtsubcidr" },
    "Tags": [{ "Key": "Name", "Value":  "m-w-subnet2" }]
}
},
"wfigw": {
  "Type": "AWS::EC2::InternetGateway",
  "Properties": {
    "Tags": [{ "Key": "Name", "Value":  "wfigw" }]
  }
},
"AttachGateway": {
  "Type": "AWS::EC2::VPCGatewayAttachment",
  "Properties": {
    "VpcId": { "Ref": "mwvpc" },
    "InternetGatewayId": { "Ref": "wfigw" }
  }
},
"wfrt": {
  "Type": "AWS::EC2::RouteTable",
  "Properties": {
    "VpcId": { "Ref": "mwvpc" },
    "Tags": [{ "Key": "Name", "Value":  "wfrt" }]
  }
},
"mwroute": {
  "Type": "AWS::EC2::Route",
  "Properties": {
    "RouteTableId": { "Ref": "wfrt" },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": { "Ref": "wfigw" }
  }
},
"wfrtasspub": {
  "Type": "AWS::EC2::SubnetRouteTableAssociation",
  "Properties": {
    "SubnetId": { "Ref": "mwpubsubnet" },
    "RouteTableId": { "Ref": "wfrt" }
  }
},
"wfNAT" : {
   "Type" : "AWS::EC2::NatGateway",
   "Properties" : {
      "AllocationId" : { "Fn::GetAtt" : ["EIP", "AllocationId"]},
      "SubnetId" : { "Ref" : "mwpubsubnet"},
      "Tags" : [ {"Key" : "Name", "Value" : "wfnat" } ]
     }
},
"EIP" : {
   "Type" : "AWS::EC2::EIP",
   "Properties" : {
      "Domain" : { "Ref": "mwvpc" }
   }
},
"wfwebserverSG" : {
    "Type" : "AWS::EC2::SecurityGroup",
    "Properties" : {
        "GroupDescription" : "Allow http to client host",
        "VpcId" : {"Ref" : "mwvpc"},
        "SecurityGroupIngress" : [{
            "IpProtocol" : "tcp",
            "FromPort" : 80,
            "ToPort" : 80,
            "CidrIp" : "0.0.0.0/0"
        }],
        "SecurityGroupEgress" : [{
            "IpProtocol" : "tcp",
            "FromPort" : 80,
            "ToPort" : 80,
            "CidrIp" : "0.0.0.0/0"
        }]
    }
},

"wfwebserver": {
    "Type": "AWS::EC2::Instance",
    "Properties": {
        "KeyName": { "Ref": "Keypair" },
        "ImageId": { "Ref": "ImageID" },
        "SubnetId": {"Ref": "mwpubsubnet" },
        "InstanceType": { "Ref": "InstanceType" },
        "Monitoring": "false",
        "SecurityGroupIds" : [{ "Ref": "wfwebserverSG" }],
        "Tags": [
            {
                "Key": "Name",
                "Value": "wfec2"
            }
        ]
}
        }

    },
    "Outputs": {

    }
}
